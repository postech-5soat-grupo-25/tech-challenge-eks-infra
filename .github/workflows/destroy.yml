name: Terraform Destroy
on: workflow_dispatch
env:
  AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
  AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
  AWS_REGION: us-east-1
  EKS_CLUSTER_NAME: tech-challenge
  DJANGO_ECR_NAME: django_api
  RUST_API_ECR_NAME: rust_api

jobs:
  terraform_destroy:
    name: Terraform Destroy
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{env.AWS_REGION}}

    - name: Update kube config
      run: aws eks update-kubeconfig --name $EKS_CLUSTER_NAME --region $AWS_REGION

    - name: Clean Cluster
      run: |
        kubectl delete deployments --all
        kubectl delete statefulsets --all
        kubectl delete services --all
        kubectl delete configmaps --all
        kubectl delete secrets --all

    - name: Clean ECR images
      run: |
        aws ecr describe-images --repository-name $DJANGO_ECR_NAME --query 'imageDetails[*].[imageDigest]' --output text | xargs -I {} aws ecr batch-delete-image --repository-name $DJANGO_ECR_NAME --image-ids imageDigest={}
        aws ecr describe-images --repository-name $RUST_API_ECR_NAME --query 'imageDetails[*].[imageDigest]' --output text | xargs -I {} aws ecr batch-delete-image --repository-name $RUST_API_ECR_NAME --image-ids imageDigest={}

    - name: Terraform Destroy
      run: |
        terraform init
        terraform destroy -auto-approve